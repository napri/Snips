{
  "_from": "pureimage",
  "_id": "pureimage@0.1.6",
  "_inBundle": false,
  "_integrity": "sha512-t74leLaXyD3VGmMbcFZNWZoHqPQNX805gHYNBCrNEVRjUkDfdlopLJnDJI9QYdhWXwtNiD02coq+NB7+CryAwg==",
  "_location": "/pureimage",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "pureimage",
    "fetchSpec": "latest",
    "name": "pureimage",
    "raw": "pureimage",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/pureimage/-/pureimage-0.1.6.tgz",
  "_shasum": "32b4de248e1ed660bddf744523375b6fa7be3821",
  "_spec": "pureimage",
  "_where": "/Users/admin/Documents/test-karaoke/karaoke",
  "author": {
    "email": "joshua@marinacci.org",
    "name": "Josh Marinacci",
    "url": "http://joshondesign.com/"
  },
  "bugs": {
    "url": "https://github.com/joshmarinacci/node-pureimage/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "jpeg-js": "^0.3.3",
    "opentype.js": "^0.4.3",
    "pngjs": "^3.3.1"
  },
  "deprecated": false,
  "description": "Pure JS image drawing API based on Canvas. Export to PNG streams.",
  "devDependencies": {
    "esdoc": "^1.0.4",
    "esdoc-integrate-test-plugin": "^1.0.0",
    "esdoc-member-plugin": "^1.0.0",
    "esdoc-node": "^1.0.3",
    "esdoc-standard-plugin": "^1.0.0",
    "file-type": "^7.6.0",
    "jest": "^22.4.2"
  },
  "homepage": "https://github.com/joshmarinacci/node-pureimage#readme",
  "jest": {
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.{js}"
    ],
    "coverageDirectory": "./tests/unit/coverage",
    "coverageReporters": [
      "lcov",
      "text"
    ],
    "globals": {
      "FIXTURES_DIR": "./tests/unit/fixtures/"
    },
    "modulePaths": [
      "<rootDir>/src/"
    ],
    "notify": true,
    "testEnvironment": "node",
    "verbose": true
  },
  "license": "MIT",
  "main": "./src/pureimage.js",
  "name": "pureimage",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/joshmarinacci/node-pureimage.svg?branch=master)](https://travis-ci.org/joshmarinacci/node-pureimage)\n\nPureImage\n==============\n\nPureImage is a pure JavaScript implementation of the HTML Canvas 2d drawing api for NodeJS.\nIt has no native dependencies.\n\n\nNew 0.1.x release\n=================\n\nI've completely refactored the code so that it should be easier to\nmaintain and implement new features. For the most part there are no API changes (since the API is\n defined by the HTML Canvas spec), but if you\nwere using the font or image loading extensions\nyou will need to use the new function names and switch to promises. For more information, please see [the API docs](http://joshmarinacci.github.io/node-pureimage)\n\nI'm also using Node buffers instead of arrays internally, so you can work with large images\nfaster than before. Rich text is no longer supported, which is fine because it never really worked\nanyway. We'll have to find a different way to do it.\n\nI've tried to maintain all of the patches that have been sent in, but if you contributed a patch\nplease check that it still works. Thank you all!  - josh\n\n\n\n## supported Canvas Features\n\n* set pixels\n* stroke and fill paths (rectangles, lines, quadratic curves, bezier curves, arcs/circles)\n* copy and scale images (nearest neighbor)\n* import and export JPG and PNG from streams using promises\n* render basic text (no bold or italics yet)\n* anti-aliased strokes and fills\n* transforms\n* standard globalAlpha and rgba() alpha compositing\n* clip shapes\n\n\nOn the roadmap, but still missing\n=================================\n\n* gradients fills\n* image fills\n* blend modes besides SRC OVER\n* smooth clip shapes\n* bold/italic fonts\n* measure text\n* smooth image interpolation\n\n\nWhy?\n====\n\nThe are more than enough drawing APIs out there. Why do we need another? My\npersonal hatred of C/C++ compilers is [widely known](https://joshondesign.com/2014/09/17/rustlang).\nThe popular Node modules [Canvas.js](https://github.com/Automattic/node-canvas) does a great\njob, but it's backed by Cairo, a C/C++ layer. I hate having native dependencies\nin Node modules. They often don't compile, or break after a system update. They\noften don't support non-X86 architectures (like the Raspberry Pi). You have\nto have a compiler already installed to use them, along with any other native\ndependencies pre-installed (like Cairo).\n\nSo, I made PureImage. It's goal is to implement the HTML Canvas spec in a headless\nNode buffer. No browser or window required.\n\nPureImage is meant to be a small and maintainable Canvas library.\nIt is *not meant to be fast*.  If there are two choices of algorithm we will\ntake the one with the simplest implementation, and preferably the fewest lines.\nWe avoid special cases and optimizations to keep the code simple and maintainable.\nIt should run everywhere and be always produce the same output. But it will not be\nfast. If you need speed go use something else.\n\nPureImage uses only pure JS dependencies.  [OpenType](https://github.com/nodebox/opentype.js/)\nfor font parsing, [PngJS](https://github.com/niegowski/node-pngjs) for PNG import/export,\nand [jpeg-js](https://github.com/eugeneware/jpeg-js) for JPG import/export.\n\nDocumentation\n=============\nDocumentation can now be found at: http://joshmarinacci.github.io/node-pureimage\n\nExamples\n=========\n\n\nMake a new empty image, 100px by 50px. Automatically filled with 100% opaque black.\n\n```js\nvar PImage = require('pureimage');\nvar img1 = PImage.make(100,50);\n```\n\nFill with a red rectangle with 50% opacity\n\n```js\nvar ctx = img1.getContext('2d');\nctx.fillStyle = 'rgba(255,0,0, 0.5)';\nctx.fillRect(0,0,100,100);\n```\n\nFill a green circle wiwth a radius of 40 pixels in the middle of a 100px square black image.\n\n```js\nvar img = PImage.make(100,100);\nvar ctx = img.getContext('2d');\nctx.fillStyle = '#00ff00';\nctx.beginPath();\nctx.arc(50,50,40,0,Math.PI*2,true); // Outer circle\nctx.closePath();\nctx.fill();\n```\n\n![image of arcto with some fringing bugs](firstimages/arcto.png)\n\nDraw the string 'ABC' in white in the font 'Source Sans Pro', loaded from disk, at a size\nof 48 points.\n\n```js\ntest('font test', (t) => {\n    var fnt = PImage.registerFont('tests/fonts/SourceSansPro-Regular.ttf','Source Sans Pro');\n    fnt.load(() => {\n        var img = PImage.make(200,200);\n        var ctx = img.getContext('2d');\n        ctx.fillStyle = '#ffffff';\n        ctx.font = \"48pt 'Source Sans Pro'\";\n        ctx.fillText(\"ABC\", 80, 80);\n    });\n});\n```\n\n\nWrite out to a PNG file\n\n```js\nPImage.encodePNGToStream(img1, fs.createWriteStream('out.png')).then(() => {\n    console.log(\"wrote out the png file to out.png\");\n}).catch((e)=>{\n    console.log(\"there was an error writing\");\n});\n```\n\nRead a jpeg, resize it, then save it out\n\n```js\nPImage.decodeJPEGFromStream(fs.createReadStream(\"tests/images/bird.jpg\")).then((img) => {\n    console.log(\"size is\",img.width,img.height);\n    var img2 = PImage.make(50,50);\n    var c = img2.getContext('2d');\n    c.drawImage(img,\n        0, 0, img.width, img.height, // source dimensions\n        0, 0, 50, 50                 // destination dimensions\n    );\n    var pth = path.join(BUILD_DIR,\"resized_bird.jpg\");\n    PImage.encodeJPEGToStream(img2,fs.createWriteStream(pth)).then(() => {\n        console.log(\"done writing\");\n    });\n});\n```\n\n\n\nThanks!\n===============\n\nThanks to Nodebox / EMRG for [opentype.js](https://github.com/nodebox/opentype.js/)\n\nThanks to Rosetta Code for [Bresenham's in JS](http://rosettacode.org/wiki/Bitmap/Bresenham%27s_line_algorithm#JavaScript)\n\nThanks to Kuba Niegowski for [PngJS](https://github.com/niegowski/node-pngjs)\n\nThanks to Eugene Ware for [jpeg-js]( https://github.com/eugeneware/jpeg-js )\n\nThanks for patches from:\n\n* Dan [danielbarela](https://github.com/danielbarela)\n* Eugene Kulabuhov [ekulabuhov](https://github.com/ekulabuhov)\n* Lethexa [lethexa](https://github.com/lethexa)\n* The Louie [the-louie](https://github.com/the-louie)\n* Jan Marsch [kekscom](https://github.com/kekscom)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/joshmarinacci/node-pureimage.git"
  },
  "scripts": {
    "docs": "esdoc",
    "unit": "jest"
  },
  "version": "0.1.6"
}
